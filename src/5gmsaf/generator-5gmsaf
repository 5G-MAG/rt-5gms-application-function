#!/bin/sh
#
# 5G-MAG Reference Tools: Generate OpenAPI bindings tool
# ======================================================
#
# Author(s): David Waring <david.warin2@bbc.co.uk>
#            Dev Audsin <dev.audsin@bbc.co.uk>
# Copyright: Â©2022 British Broadcasting Corporation
#   License: 5G-MAG Public License v1.0
#
# Prerequisites:
#   - git
#   - java
#   - wget
#
# For full license terms please see the LICENSE file distributed with this
# program. If this file is missing then the license can be retrieved from
# https://drive.google.com/file/d/1cinCiA778IErENZ3JN52VFW-1ffHpx7Z/view
#
# This script will use wget and git to download the openapi-generator-cli tool
# and a specified branch of the 5G APIs. It will then create a set of bindings
# in a specified output language.
#

# Save location of this script and the name it was called by
scriptname=`basename "$0"`
scriptdir=`dirname "$0"`
scriptdir=`cd "$scriptdir"; pwd`

# Command line option defaults
default_branch='REL-17'
default_apis="TS26512_M1_ProvisioningSessions TS26512_M1_ContentHostingProvisioning TS26512_M1_ServerCertificatesProvisioning TS26512_M1_ContentProtocolsDiscovery TS26512_M1_MetricsReportingProvisioning TS26512_M1_ConsumptionReportingProvisioning M3_ContentHostingProvisioning M3_ServerCertificatesProvisioning TS26512_M5_ServiceAccessInformation TS26512_M5_ConsumptionReporting Maf_Management"

# Parse command line arguments
ARGS=`getopt -n "$scriptname" -o 'a:b:hM:' -l 'api:,branch:,help,model-deps:' -s sh -- "$@"`

if [ $? -ne 0 ]; then
    print_syntax >&2
    exit 1
fi

print_syntax() {
    echo "Syntax: $scriptname [-h] [-b <release-branch>] [-a <API-name>] [-M <model-deps-file>"
}

print_help() {
    cat <<EOF
5G-MAG Reference Tools - Generate OpenAPI bindings

This script will download the 5G APIs and openapi-generator-cli tool and uses
them to create bindings of the specified language.

EOF
    print_syntax
    cat <<EOF

Options:
  -h         --help                Show this help message and exit.
  -a API     --api API             The OpenAPI interface to generate the
                                   bindings from (e.g.
                                   TS26512_M1_ContentHostingProvisioning).
			           [default: $default_apis]
  -b BRANCH  --branch BRANCH       Use the given branch of the 5G_APIs
                                   repository. [default: $default_branch]
  -M DEPFILE --model-deps DEPFILE  File to store the list of generated model
                                   source files.
EOF
}

eval set -- "$ARGS"
unset ARGS

APIS="$default_apis"
BRANCH="$default_branch"
MODEL_DEPS=""

while true; do
    case "$1" in
    -a|--api)
	APIS="$2"
	shift 2
	continue
	;;
    -b|--branch)
	BRANCH="$2"
	shift 2
	continue
	;;
    -h|--help)
	print_help
	exit 0
	;;
    -M|--model-deps)
	MODEL_DEPS="$2"
	shift 2
	continue
	;;
    --)
	shift
	break
	;;
    *)
	echo "Error: Command line argument \"$1\" unexpected" >&2
	print_syntax >&2
	exit 1
	;;
    esac
done

if [ $# -gt 0 ]; then
    echo "Error: Command line argument \"$1\" unexpected" >&2
    print_syntax >&2
    exit 1
fi

# Get the absolute path to the destination directory
destdir=`realpath -m "$scriptdir/openapi"`
openapi_gen_dir=`realpath "$scriptdir/../../subprojects/open5gs/lib/sbi/support/r17-20230301-openapitools-6.4.0/openapi-generator"`

sed "s@^templateDir:.*@templateDir: \"${openapi_gen_dir}/templates\"@" $openapi_gen_dir/config.yaml > $scriptdir/config.yaml
cp "${scriptdir}/"*.mustache "${openapi_gen_dir}/templates/"
cat >> $scriptdir/config.yaml << EOF
files:
  api-info-head.mustache:
    templateType: API
    destinationFilename: -info.h
EOF

# call the common generate_openapi script
if [ ! -d "$scriptdir/openapi" ]; then
    mkdir "$scriptdir/openapi"
fi

"$scriptdir/../../subprojects/rt-common-shared/5gms/scripts/generate_openapi" -a "${APIS}" -b "${BRANCH}" -c "$scriptdir/config.yaml" -l c -d "$scriptdir/openapi" -g 6.4.0 -y "$scriptdir/fix_openapi_yaml.py"

cp "$scriptdir/set.h" "$scriptdir/openapi/model"

# Delete any model file already in the Open5GS SBI library to avoid clashes
for f in "$scriptdir/openapi/model"/*.[ch]; do
    b=`basename "$f"`
    if [ -e "$scriptdir/../../subprojects/open5gs/lib/sbi/openapi/model/$b" ]; then
	rm "$f"
    fi
done

if [ -n "$MODEL_DEPS" ]; then
    (cd "$scriptdir"; echo openapi/model/*.[ch] > "$MODEL_DEPS")
fi

exit 0

